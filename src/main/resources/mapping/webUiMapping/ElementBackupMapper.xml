<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的 -->
<mapper namespace="com.thinkingdata.webui.daoUi.ElementBackupDao">
    <!--批量新增备份元素信息-->
    <insert id="batchAdd" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id" parameterType="java.util.List">
        INSERT INTO
        elementbackup(elementId,locateType,keyword,addTime,updateTime)
        VALUES
        <foreach collection="elementBackupList" item="elementBackup" separator=",">
            (
            #{elementBackup.elementId},
            #{elementBackup.locateType},
            #{elementBackup.keyword},
            now(),
            now()
            )
        </foreach>
    </insert>
    <!--单个新增备份元素信息-->
    <insert id="singleAdd" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
		INSERT INTO
        elementbackup(elementId,locateType,keyword,addTime,updateTime)
		VALUES(#{elementBackup.elementId},#{elementBackup.locateType},#{elementBackup.keyword},now(),now())
	</insert>
    <!--根据元素id获取元素备份-->
    <select id="getElementBackupByElementId"
            resultType="com.thinkingdata.webui.entityUi.ElementBackup">
		select * from elementbackup where elementId=#{elementId}
	</select>

    <!--根据页面id删除备份定位方式-->
    <delete id="deleteBackupByPageId">
delete FROM elementbackup where elementId in
(select * from (select e.id from element e inner join page p on e.pageId=p.id where p.id=#{pageId}) elementIds)
    </delete>
</mapper>